// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.9
// source: pkg/proto/agenda.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *IDIn) Reset() {
	*x = IDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDIn) ProtoMessage() {}

func (x *IDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDIn.ProtoReflect.Descriptor instead.
func (*IDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{0}
}

func (x *IDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{1}
}

func (x *Result) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Result) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type Agenda struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date             string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	Presiding        string `protobuf:"bytes,2,opt,name=Presiding,proto3" json:"Presiding,omitempty"`
	Conducting       string `protobuf:"bytes,3,opt,name=Conducting,proto3" json:"Conducting,omitempty"`
	Organist         string `protobuf:"bytes,4,opt,name=Organist,proto3" json:"Organist,omitempty"`
	Chorister        string `protobuf:"bytes,5,opt,name=Chorister,proto3" json:"Chorister,omitempty"`
	Newsletter       string `protobuf:"bytes,6,opt,name=Newsletter,proto3" json:"Newsletter,omitempty"`
	IntermediateHymn int64  `protobuf:"varint,7,opt,name=IntermediateHymn,proto3" json:"IntermediateHymn,omitempty"`
	MusicalNumber    string `protobuf:"bytes,8,opt,name=MusicalNumber,proto3" json:"MusicalNumber,omitempty"`
	ClosingHymn      int64  `protobuf:"varint,9,opt,name=ClosingHymn,proto3" json:"ClosingHymn,omitempty"`
	Invocation       string `protobuf:"bytes,10,opt,name=Invocation,proto3" json:"Invocation,omitempty"`
	Benediction      string `protobuf:"bytes,11,opt,name=Benediction,proto3" json:"Benediction,omitempty"`
	WardBusiness     bool   `protobuf:"varint,12,opt,name=WardBusiness,proto3" json:"WardBusiness,omitempty"`
	BishopBusiness   bool   `protobuf:"varint,13,opt,name=BishopBusiness,proto3" json:"BishopBusiness,omitempty"`
	LetterRead       bool   `protobuf:"varint,14,opt,name=LetterRead,proto3" json:"LetterRead,omitempty"`
	StakeBusiness    bool   `protobuf:"varint,15,opt,name=StakeBusiness,proto3" json:"StakeBusiness,omitempty"`
	Stake            string `protobuf:"bytes,16,opt,name=Stake,proto3" json:"Stake,omitempty"`
	NewMembers       bool   `protobuf:"varint,17,opt,name=NewMembers,proto3" json:"NewMembers,omitempty"`
	Ordinance        bool   `protobuf:"varint,18,opt,name=Ordinance,proto3" json:"Ordinance,omitempty"`
	Fastsunday       bool   `protobuf:"varint,19,opt,name=Fastsunday,proto3" json:"Fastsunday,omitempty"`
	AgendaPublished  bool   `protobuf:"varint,20,opt,name=AgendaPublished,proto3" json:"AgendaPublished,omitempty"`
	ProgramPublished bool   `protobuf:"varint,21,opt,name=ProgramPublished,proto3" json:"ProgramPublished,omitempty"`
}

func (x *Agenda) Reset() {
	*x = Agenda{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agenda) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agenda) ProtoMessage() {}

func (x *Agenda) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agenda.ProtoReflect.Descriptor instead.
func (*Agenda) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{2}
}

func (x *Agenda) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Agenda) GetPresiding() string {
	if x != nil {
		return x.Presiding
	}
	return ""
}

func (x *Agenda) GetConducting() string {
	if x != nil {
		return x.Conducting
	}
	return ""
}

func (x *Agenda) GetOrganist() string {
	if x != nil {
		return x.Organist
	}
	return ""
}

func (x *Agenda) GetChorister() string {
	if x != nil {
		return x.Chorister
	}
	return ""
}

func (x *Agenda) GetNewsletter() string {
	if x != nil {
		return x.Newsletter
	}
	return ""
}

func (x *Agenda) GetIntermediateHymn() int64 {
	if x != nil {
		return x.IntermediateHymn
	}
	return 0
}

func (x *Agenda) GetMusicalNumber() string {
	if x != nil {
		return x.MusicalNumber
	}
	return ""
}

func (x *Agenda) GetClosingHymn() int64 {
	if x != nil {
		return x.ClosingHymn
	}
	return 0
}

func (x *Agenda) GetInvocation() string {
	if x != nil {
		return x.Invocation
	}
	return ""
}

func (x *Agenda) GetBenediction() string {
	if x != nil {
		return x.Benediction
	}
	return ""
}

func (x *Agenda) GetWardBusiness() bool {
	if x != nil {
		return x.WardBusiness
	}
	return false
}

func (x *Agenda) GetBishopBusiness() bool {
	if x != nil {
		return x.BishopBusiness
	}
	return false
}

func (x *Agenda) GetLetterRead() bool {
	if x != nil {
		return x.LetterRead
	}
	return false
}

func (x *Agenda) GetStakeBusiness() bool {
	if x != nil {
		return x.StakeBusiness
	}
	return false
}

func (x *Agenda) GetStake() string {
	if x != nil {
		return x.Stake
	}
	return ""
}

func (x *Agenda) GetNewMembers() bool {
	if x != nil {
		return x.NewMembers
	}
	return false
}

func (x *Agenda) GetOrdinance() bool {
	if x != nil {
		return x.Ordinance
	}
	return false
}

func (x *Agenda) GetFastsunday() bool {
	if x != nil {
		return x.Fastsunday
	}
	return false
}

func (x *Agenda) GetAgendaPublished() bool {
	if x != nil {
		return x.AgendaPublished
	}
	return false
}

func (x *Agenda) GetProgramPublished() bool {
	if x != nil {
		return x.ProgramPublished
	}
	return false
}

type AgendaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agenda *Agenda `protobuf:"bytes,1,opt,name=Agenda,proto3" json:"Agenda,omitempty"`
	Result *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AgendaResponse) Reset() {
	*x = AgendaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgendaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgendaResponse) ProtoMessage() {}

func (x *AgendaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgendaResponse.ProtoReflect.Descriptor instead.
func (*AgendaResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{3}
}

func (x *AgendaResponse) GetAgenda() *Agenda {
	if x != nil {
		return x.Agenda
	}
	return nil
}

func (x *AgendaResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type AgendaRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Agenda []*Agenda `protobuf:"bytes,1,rep,name=Agenda,proto3" json:"Agenda,omitempty"`
	Result *Result   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AgendaRepeatResponse) Reset() {
	*x = AgendaRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgendaRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgendaRepeatResponse) ProtoMessage() {}

func (x *AgendaRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgendaRepeatResponse.ProtoReflect.Descriptor instead.
func (*AgendaRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{4}
}

func (x *AgendaRepeatResponse) GetAgenda() []*Agenda {
	if x != nil {
		return x.Agenda
	}
	return nil
}

func (x *AgendaRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type AgendaIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *AgendaIDIn) Reset() {
	*x = AgendaIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgendaIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgendaIDIn) ProtoMessage() {}

func (x *AgendaIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgendaIDIn.ProtoReflect.Descriptor instead.
func (*AgendaIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{5}
}

func (x *AgendaIDIn) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type Visitor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Name string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Visitor) Reset() {
	*x = Visitor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Visitor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Visitor) ProtoMessage() {}

func (x *Visitor) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Visitor.ProtoReflect.Descriptor instead.
func (*Visitor) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{6}
}

func (x *Visitor) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Visitor) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Visitor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VisitorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitor *Visitor `protobuf:"bytes,1,opt,name=Visitor,proto3" json:"Visitor,omitempty"`
	Result  *Result  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VisitorResponse) Reset() {
	*x = VisitorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitorResponse) ProtoMessage() {}

func (x *VisitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitorResponse.ProtoReflect.Descriptor instead.
func (*VisitorResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{7}
}

func (x *VisitorResponse) GetVisitor() *Visitor {
	if x != nil {
		return x.Visitor
	}
	return nil
}

func (x *VisitorResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type VisitorRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Visitor []*Visitor `protobuf:"bytes,1,rep,name=Visitor,proto3" json:"Visitor,omitempty"`
	Result  *Result    `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VisitorRepeatResponse) Reset() {
	*x = VisitorRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitorRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitorRepeatResponse) ProtoMessage() {}

func (x *VisitorRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitorRepeatResponse.ProtoReflect.Descriptor instead.
func (*VisitorRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{8}
}

func (x *VisitorRepeatResponse) GetVisitor() []*Visitor {
	if x != nil {
		return x.Visitor
	}
	return nil
}

func (x *VisitorRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type VisitorIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *VisitorIDIn) Reset() {
	*x = VisitorIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VisitorIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VisitorIDIn) ProtoMessage() {}

func (x *VisitorIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VisitorIDIn.ProtoReflect.Descriptor instead.
func (*VisitorIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{9}
}

func (x *VisitorIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WardBusinessRel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date    string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Calling string `protobuf:"bytes,4,opt,name=Calling,proto3" json:"Calling,omitempty"`
}

func (x *WardBusinessRel) Reset() {
	*x = WardBusinessRel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessRel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessRel) ProtoMessage() {}

func (x *WardBusinessRel) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessRel.ProtoReflect.Descriptor instead.
func (*WardBusinessRel) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{10}
}

func (x *WardBusinessRel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WardBusinessRel) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *WardBusinessRel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WardBusinessRel) GetCalling() string {
	if x != nil {
		return x.Calling
	}
	return ""
}

type WardBusinessRelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WardBusinessRel *WardBusinessRel `protobuf:"bytes,1,opt,name=WardBusinessRel,proto3" json:"WardBusinessRel,omitempty"`
	Result          *Result          `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WardBusinessRelResponse) Reset() {
	*x = WardBusinessRelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessRelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessRelResponse) ProtoMessage() {}

func (x *WardBusinessRelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessRelResponse.ProtoReflect.Descriptor instead.
func (*WardBusinessRelResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{11}
}

func (x *WardBusinessRelResponse) GetWardBusinessRel() *WardBusinessRel {
	if x != nil {
		return x.WardBusinessRel
	}
	return nil
}

func (x *WardBusinessRelResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type WardBusinessRelRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WardBusinessRel []*WardBusinessRel `protobuf:"bytes,1,rep,name=WardBusinessRel,proto3" json:"WardBusinessRel,omitempty"`
	Result          *Result            `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WardBusinessRelRepeatResponse) Reset() {
	*x = WardBusinessRelRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessRelRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessRelRepeatResponse) ProtoMessage() {}

func (x *WardBusinessRelRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessRelRepeatResponse.ProtoReflect.Descriptor instead.
func (*WardBusinessRelRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{12}
}

func (x *WardBusinessRelRepeatResponse) GetWardBusinessRel() []*WardBusinessRel {
	if x != nil {
		return x.WardBusinessRel
	}
	return nil
}

func (x *WardBusinessRelRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type WardBusinessRelIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *WardBusinessRelIDIn) Reset() {
	*x = WardBusinessRelIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessRelIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessRelIDIn) ProtoMessage() {}

func (x *WardBusinessRelIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessRelIDIn.ProtoReflect.Descriptor instead.
func (*WardBusinessRelIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{13}
}

func (x *WardBusinessRelIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WardBusinessSus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date    string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Calling string `protobuf:"bytes,4,opt,name=Calling,proto3" json:"Calling,omitempty"`
}

func (x *WardBusinessSus) Reset() {
	*x = WardBusinessSus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessSus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessSus) ProtoMessage() {}

func (x *WardBusinessSus) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessSus.ProtoReflect.Descriptor instead.
func (*WardBusinessSus) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{14}
}

func (x *WardBusinessSus) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WardBusinessSus) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *WardBusinessSus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WardBusinessSus) GetCalling() string {
	if x != nil {
		return x.Calling
	}
	return ""
}

type WardBusinessSusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WardBusinessSus *WardBusinessSus `protobuf:"bytes,1,opt,name=WardBusinessSus,proto3" json:"WardBusinessSus,omitempty"`
	Result          *Result          `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WardBusinessSusResponse) Reset() {
	*x = WardBusinessSusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessSusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessSusResponse) ProtoMessage() {}

func (x *WardBusinessSusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessSusResponse.ProtoReflect.Descriptor instead.
func (*WardBusinessSusResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{15}
}

func (x *WardBusinessSusResponse) GetWardBusinessSus() *WardBusinessSus {
	if x != nil {
		return x.WardBusinessSus
	}
	return nil
}

func (x *WardBusinessSusResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type WardBusinessSusRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WardBusinessSus []*WardBusinessSus `protobuf:"bytes,1,rep,name=WardBusinessSus,proto3" json:"WardBusinessSus,omitempty"`
	Result          *Result            `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *WardBusinessSusRepeatResponse) Reset() {
	*x = WardBusinessSusRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessSusRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessSusRepeatResponse) ProtoMessage() {}

func (x *WardBusinessSusRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessSusRepeatResponse.ProtoReflect.Descriptor instead.
func (*WardBusinessSusRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{16}
}

func (x *WardBusinessSusRepeatResponse) GetWardBusinessSus() []*WardBusinessSus {
	if x != nil {
		return x.WardBusinessSus
	}
	return nil
}

func (x *WardBusinessSusRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type WardBusinessSusIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *WardBusinessSusIDIn) Reset() {
	*x = WardBusinessSusIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WardBusinessSusIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WardBusinessSusIDIn) ProtoMessage() {}

func (x *WardBusinessSusIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WardBusinessSusIDIn.ProtoReflect.Descriptor instead.
func (*WardBusinessSusIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{17}
}

func (x *WardBusinessSusIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type BishopBusiness struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date    string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *BishopBusiness) Reset() {
	*x = BishopBusiness{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BishopBusiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BishopBusiness) ProtoMessage() {}

func (x *BishopBusiness) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BishopBusiness.ProtoReflect.Descriptor instead.
func (*BishopBusiness) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{18}
}

func (x *BishopBusiness) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BishopBusiness) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *BishopBusiness) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BishopBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BishopBusiness *BishopBusiness `protobuf:"bytes,1,opt,name=BishopBusiness,proto3" json:"BishopBusiness,omitempty"`
	Result         *Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *BishopBusinessResponse) Reset() {
	*x = BishopBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BishopBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BishopBusinessResponse) ProtoMessage() {}

func (x *BishopBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BishopBusinessResponse.ProtoReflect.Descriptor instead.
func (*BishopBusinessResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{19}
}

func (x *BishopBusinessResponse) GetBishopBusiness() *BishopBusiness {
	if x != nil {
		return x.BishopBusiness
	}
	return nil
}

func (x *BishopBusinessResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type BishopBusinessRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BishopBusiness []*BishopBusiness `protobuf:"bytes,1,rep,name=BishopBusiness,proto3" json:"BishopBusiness,omitempty"`
	Result         *Result           `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *BishopBusinessRepeatResponse) Reset() {
	*x = BishopBusinessRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BishopBusinessRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BishopBusinessRepeatResponse) ProtoMessage() {}

func (x *BishopBusinessRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BishopBusinessRepeatResponse.ProtoReflect.Descriptor instead.
func (*BishopBusinessRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{20}
}

func (x *BishopBusinessRepeatResponse) GetBishopBusiness() []*BishopBusiness {
	if x != nil {
		return x.BishopBusiness
	}
	return nil
}

func (x *BishopBusinessRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type BishopBusinessIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *BishopBusinessIDIn) Reset() {
	*x = BishopBusinessIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BishopBusinessIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BishopBusinessIDIn) ProtoMessage() {}

func (x *BishopBusinessIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BishopBusinessIDIn.ProtoReflect.Descriptor instead.
func (*BishopBusinessIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{21}
}

func (x *BishopBusinessIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type NewMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date       string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	FamilyName string `protobuf:"bytes,3,opt,name=FamilyName,proto3" json:"FamilyName,omitempty"`
	Names      string `protobuf:"bytes,4,opt,name=Names,proto3" json:"Names,omitempty"`
}

func (x *NewMember) Reset() {
	*x = NewMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMember) ProtoMessage() {}

func (x *NewMember) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMember.ProtoReflect.Descriptor instead.
func (*NewMember) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{22}
}

func (x *NewMember) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewMember) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *NewMember) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *NewMember) GetNames() string {
	if x != nil {
		return x.Names
	}
	return ""
}

type NewMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewMember *NewMember `protobuf:"bytes,1,opt,name=NewMember,proto3" json:"NewMember,omitempty"`
	Result    *Result    `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NewMemberResponse) Reset() {
	*x = NewMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMemberResponse) ProtoMessage() {}

func (x *NewMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMemberResponse.ProtoReflect.Descriptor instead.
func (*NewMemberResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{23}
}

func (x *NewMemberResponse) GetNewMember() *NewMember {
	if x != nil {
		return x.NewMember
	}
	return nil
}

func (x *NewMemberResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type NewMemberRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewMember []*NewMember `protobuf:"bytes,1,rep,name=NewMember,proto3" json:"NewMember,omitempty"`
	Result    *Result      `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NewMemberRepeatResponse) Reset() {
	*x = NewMemberRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMemberRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMemberRepeatResponse) ProtoMessage() {}

func (x *NewMemberRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMemberRepeatResponse.ProtoReflect.Descriptor instead.
func (*NewMemberRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{24}
}

func (x *NewMemberRepeatResponse) GetNewMember() []*NewMember {
	if x != nil {
		return x.NewMember
	}
	return nil
}

func (x *NewMemberRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type NewMemberIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *NewMemberIDIn) Reset() {
	*x = NewMemberIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMemberIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMemberIDIn) ProtoMessage() {}

func (x *NewMemberIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMemberIDIn.ProtoReflect.Descriptor instead.
func (*NewMemberIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{25}
}

func (x *NewMemberIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Ordinance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date          string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Confirmations string `protobuf:"bytes,3,opt,name=Confirmations,proto3" json:"Confirmations,omitempty"`
	Blessings     string `protobuf:"bytes,4,opt,name=Blessings,proto3" json:"Blessings,omitempty"`
}

func (x *Ordinance) Reset() {
	*x = Ordinance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ordinance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ordinance) ProtoMessage() {}

func (x *Ordinance) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ordinance.ProtoReflect.Descriptor instead.
func (*Ordinance) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{26}
}

func (x *Ordinance) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ordinance) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Ordinance) GetConfirmations() string {
	if x != nil {
		return x.Confirmations
	}
	return ""
}

func (x *Ordinance) GetBlessings() string {
	if x != nil {
		return x.Blessings
	}
	return ""
}

type OrdinanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinance *Ordinance `protobuf:"bytes,1,opt,name=Ordinance,proto3" json:"Ordinance,omitempty"`
	Result    *Result    `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *OrdinanceResponse) Reset() {
	*x = OrdinanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdinanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdinanceResponse) ProtoMessage() {}

func (x *OrdinanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdinanceResponse.ProtoReflect.Descriptor instead.
func (*OrdinanceResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{27}
}

func (x *OrdinanceResponse) GetOrdinance() *Ordinance {
	if x != nil {
		return x.Ordinance
	}
	return nil
}

func (x *OrdinanceResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type OrdinanceRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ordinance []*Ordinance `protobuf:"bytes,1,rep,name=Ordinance,proto3" json:"Ordinance,omitempty"`
	Result    *Result      `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *OrdinanceRepeatResponse) Reset() {
	*x = OrdinanceRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdinanceRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdinanceRepeatResponse) ProtoMessage() {}

func (x *OrdinanceRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdinanceRepeatResponse.ProtoReflect.Descriptor instead.
func (*OrdinanceRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{28}
}

func (x *OrdinanceRepeatResponse) GetOrdinance() []*Ordinance {
	if x != nil {
		return x.Ordinance
	}
	return nil
}

func (x *OrdinanceRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type OrdinanceIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *OrdinanceIDIn) Reset() {
	*x = OrdinanceIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrdinanceIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrdinanceIDIn) ProtoMessage() {}

func (x *OrdinanceIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrdinanceIDIn.ProtoReflect.Descriptor instead.
func (*OrdinanceIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{29}
}

func (x *OrdinanceIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Speaker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date     string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Position string `protobuf:"bytes,3,opt,name=Position,proto3" json:"Position,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Speaker) Reset() {
	*x = Speaker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Speaker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Speaker) ProtoMessage() {}

func (x *Speaker) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Speaker.ProtoReflect.Descriptor instead.
func (*Speaker) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{30}
}

func (x *Speaker) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Speaker) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Speaker) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Speaker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SpeakerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speaker *Speaker `protobuf:"bytes,1,opt,name=Speaker,proto3" json:"Speaker,omitempty"`
	Result  *Result  `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SpeakerResponse) Reset() {
	*x = SpeakerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeakerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakerResponse) ProtoMessage() {}

func (x *SpeakerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakerResponse.ProtoReflect.Descriptor instead.
func (*SpeakerResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{31}
}

func (x *SpeakerResponse) GetSpeaker() *Speaker {
	if x != nil {
		return x.Speaker
	}
	return nil
}

func (x *SpeakerResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SpeakerRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speaker []*Speaker `protobuf:"bytes,1,rep,name=Speaker,proto3" json:"Speaker,omitempty"`
	Result  *Result    `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SpeakerRepeatResponse) Reset() {
	*x = SpeakerRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeakerRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakerRepeatResponse) ProtoMessage() {}

func (x *SpeakerRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakerRepeatResponse.ProtoReflect.Descriptor instead.
func (*SpeakerRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{32}
}

func (x *SpeakerRepeatResponse) GetSpeaker() []*Speaker {
	if x != nil {
		return x.Speaker
	}
	return nil
}

func (x *SpeakerRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type SpeakerIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *SpeakerIDIn) Reset() {
	*x = SpeakerIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpeakerIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakerIDIn) ProtoMessage() {}

func (x *SpeakerIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakerIDIn.ProtoReflect.Descriptor instead.
func (*SpeakerIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{33}
}

func (x *SpeakerIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Announcement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Date    string `protobuf:"bytes,2,opt,name=Date,proto3" json:"Date,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=Message,proto3" json:"Message,omitempty"`
	Pulpit  bool   `protobuf:"varint,4,opt,name=Pulpit,proto3" json:"Pulpit,omitempty"`
}

func (x *Announcement) Reset() {
	*x = Announcement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Announcement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Announcement) ProtoMessage() {}

func (x *Announcement) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Announcement.ProtoReflect.Descriptor instead.
func (*Announcement) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{34}
}

func (x *Announcement) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Announcement) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Announcement) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Announcement) GetPulpit() bool {
	if x != nil {
		return x.Pulpit
	}
	return false
}

type AnnouncementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcement *Announcement `protobuf:"bytes,1,opt,name=Announcement,proto3" json:"Announcement,omitempty"`
	Result       *Result       `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AnnouncementResponse) Reset() {
	*x = AnnouncementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementResponse) ProtoMessage() {}

func (x *AnnouncementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementResponse.ProtoReflect.Descriptor instead.
func (*AnnouncementResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{35}
}

func (x *AnnouncementResponse) GetAnnouncement() *Announcement {
	if x != nil {
		return x.Announcement
	}
	return nil
}

func (x *AnnouncementResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type AnnouncementRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Announcement []*Announcement `protobuf:"bytes,1,rep,name=Announcement,proto3" json:"Announcement,omitempty"`
	Result       *Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AnnouncementRepeatResponse) Reset() {
	*x = AnnouncementRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementRepeatResponse) ProtoMessage() {}

func (x *AnnouncementRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementRepeatResponse.ProtoReflect.Descriptor instead.
func (*AnnouncementRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{36}
}

func (x *AnnouncementRepeatResponse) GetAnnouncement() []*Announcement {
	if x != nil {
		return x.Announcement
	}
	return nil
}

func (x *AnnouncementRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type AnnouncementIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *AnnouncementIDIn) Reset() {
	*x = AnnouncementIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnouncementIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnouncementIDIn) ProtoMessage() {}

func (x *AnnouncementIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnouncementIDIn.ProtoReflect.Descriptor instead.
func (*AnnouncementIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{37}
}

func (x *AnnouncementIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Hymn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Hymn) Reset() {
	*x = Hymn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hymn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hymn) ProtoMessage() {}

func (x *Hymn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hymn.ProtoReflect.Descriptor instead.
func (*Hymn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{38}
}

func (x *Hymn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Hymn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type HymnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hymn   *Hymn   `protobuf:"bytes,1,opt,name=Hymn,proto3" json:"Hymn,omitempty"`
	Result *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *HymnResponse) Reset() {
	*x = HymnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HymnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HymnResponse) ProtoMessage() {}

func (x *HymnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HymnResponse.ProtoReflect.Descriptor instead.
func (*HymnResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{39}
}

func (x *HymnResponse) GetHymn() *Hymn {
	if x != nil {
		return x.Hymn
	}
	return nil
}

func (x *HymnResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type HymnRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hymn   []*Hymn `protobuf:"bytes,1,rep,name=Hymn,proto3" json:"Hymn,omitempty"`
	Result *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *HymnRepeatResponse) Reset() {
	*x = HymnRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HymnRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HymnRepeatResponse) ProtoMessage() {}

func (x *HymnRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HymnRepeatResponse.ProtoReflect.Descriptor instead.
func (*HymnRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{40}
}

func (x *HymnRepeatResponse) GetHymn() []*Hymn {
	if x != nil {
		return x.Hymn
	}
	return nil
}

func (x *HymnRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type HymnIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *HymnIDIn) Reset() {
	*x = HymnIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HymnIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HymnIDIn) ProtoMessage() {}

func (x *HymnIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HymnIDIn.ProtoReflect.Descriptor instead.
func (*HymnIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{41}
}

func (x *HymnIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DefaultCalling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Organist   string `protobuf:"bytes,2,opt,name=Organist,proto3" json:"Organist,omitempty"`
	Chorister  string `protobuf:"bytes,3,opt,name=Chorister,proto3" json:"Chorister,omitempty"`
	Newsletter string `protobuf:"bytes,4,opt,name=Newsletter,proto3" json:"Newsletter,omitempty"`
	Stake      string `protobuf:"bytes,5,opt,name=Stake,proto3" json:"Stake,omitempty"`
}

func (x *DefaultCalling) Reset() {
	*x = DefaultCalling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultCalling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCalling) ProtoMessage() {}

func (x *DefaultCalling) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCalling.ProtoReflect.Descriptor instead.
func (*DefaultCalling) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{42}
}

func (x *DefaultCalling) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DefaultCalling) GetOrganist() string {
	if x != nil {
		return x.Organist
	}
	return ""
}

func (x *DefaultCalling) GetChorister() string {
	if x != nil {
		return x.Chorister
	}
	return ""
}

func (x *DefaultCalling) GetNewsletter() string {
	if x != nil {
		return x.Newsletter
	}
	return ""
}

func (x *DefaultCalling) GetStake() string {
	if x != nil {
		return x.Stake
	}
	return ""
}

type DefaultCallingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultCalling *DefaultCalling `protobuf:"bytes,1,opt,name=DefaultCalling,proto3" json:"DefaultCalling,omitempty"`
	Result         *Result         `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DefaultCallingResponse) Reset() {
	*x = DefaultCallingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultCallingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCallingResponse) ProtoMessage() {}

func (x *DefaultCallingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCallingResponse.ProtoReflect.Descriptor instead.
func (*DefaultCallingResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{43}
}

func (x *DefaultCallingResponse) GetDefaultCalling() *DefaultCalling {
	if x != nil {
		return x.DefaultCalling
	}
	return nil
}

func (x *DefaultCallingResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type DefaultCallingRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultCalling []*DefaultCalling `protobuf:"bytes,1,rep,name=DefaultCalling,proto3" json:"DefaultCalling,omitempty"`
	Result         *Result           `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DefaultCallingRepeatResponse) Reset() {
	*x = DefaultCallingRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultCallingRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCallingRepeatResponse) ProtoMessage() {}

func (x *DefaultCallingRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCallingRepeatResponse.ProtoReflect.Descriptor instead.
func (*DefaultCallingRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{44}
}

func (x *DefaultCallingRepeatResponse) GetDefaultCalling() []*DefaultCalling {
	if x != nil {
		return x.DefaultCalling
	}
	return nil
}

func (x *DefaultCallingRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type DefaultCallingIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *DefaultCallingIDIn) Reset() {
	*x = DefaultCallingIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultCallingIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultCallingIDIn) ProtoMessage() {}

func (x *DefaultCallingIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultCallingIDIn.ProtoReflect.Descriptor instead.
func (*DefaultCallingIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{45}
}

func (x *DefaultCallingIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{46}
}

func (x *Role) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   *Role   `protobuf:"bytes,1,opt,name=Role,proto3" json:"Role,omitempty"`
	Result *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RoleResponse) Reset() {
	*x = RoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleResponse) ProtoMessage() {}

func (x *RoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleResponse.ProtoReflect.Descriptor instead.
func (*RoleResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{47}
}

func (x *RoleResponse) GetRole() *Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type RoleRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role   []*Role `protobuf:"bytes,1,rep,name=Role,proto3" json:"Role,omitempty"`
	Result *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RoleRepeatResponse) Reset() {
	*x = RoleRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleRepeatResponse) ProtoMessage() {}

func (x *RoleRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleRepeatResponse.ProtoReflect.Descriptor instead.
func (*RoleRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{48}
}

func (x *RoleRepeatResponse) GetRole() []*Role {
	if x != nil {
		return x.Role
	}
	return nil
}

func (x *RoleRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type RoleIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *RoleIDIn) Reset() {
	*x = RoleIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleIDIn) ProtoMessage() {}

func (x *RoleIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleIDIn.ProtoReflect.Descriptor instead.
func (*RoleIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{49}
}

func (x *RoleIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RoleUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	RoleId int64  `protobuf:"varint,2,opt,name=RoleId,proto3" json:"RoleId,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Pwd    string `protobuf:"bytes,4,opt,name=Pwd,proto3" json:"Pwd,omitempty"`
}

func (x *RoleUser) Reset() {
	*x = RoleUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUser) ProtoMessage() {}

func (x *RoleUser) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUser.ProtoReflect.Descriptor instead.
func (*RoleUser) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{50}
}

func (x *RoleUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoleUser) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoleUser) GetPwd() string {
	if x != nil {
		return x.Pwd
	}
	return ""
}

type RoleUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleUser *RoleUser `protobuf:"bytes,1,opt,name=RoleUser,proto3" json:"RoleUser,omitempty"`
	Result   *Result   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RoleUserResponse) Reset() {
	*x = RoleUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUserResponse) ProtoMessage() {}

func (x *RoleUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUserResponse.ProtoReflect.Descriptor instead.
func (*RoleUserResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{51}
}

func (x *RoleUserResponse) GetRoleUser() *RoleUser {
	if x != nil {
		return x.RoleUser
	}
	return nil
}

func (x *RoleUserResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type RoleUserRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleUser []*RoleUser `protobuf:"bytes,1,rep,name=RoleUser,proto3" json:"RoleUser,omitempty"`
	Result   *Result     `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *RoleUserRepeatResponse) Reset() {
	*x = RoleUserRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUserRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUserRepeatResponse) ProtoMessage() {}

func (x *RoleUserRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUserRepeatResponse.ProtoReflect.Descriptor instead.
func (*RoleUserRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{52}
}

func (x *RoleUserRepeatResponse) GetRoleUser() []*RoleUser {
	if x != nil {
		return x.RoleUser
	}
	return nil
}

func (x *RoleUserRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type RoleUserIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *RoleUserIDIn) Reset() {
	*x = RoleUserIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleUserIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleUserIDIn) ProtoMessage() {}

func (x *RoleUserIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleUserIDIn.ProtoReflect.Descriptor instead.
func (*RoleUserIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{53}
}

func (x *RoleUserIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Member struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	FirstName  string `protobuf:"bytes,2,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName   string `protobuf:"bytes,3,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Gender     string `protobuf:"bytes,4,opt,name=Gender,proto3" json:"Gender,omitempty"`
	LastPrayed string `protobuf:"bytes,5,opt,name=LastPrayed,proto3" json:"LastPrayed,omitempty"`
	LastTalked string `protobuf:"bytes,6,opt,name=LastTalked,proto3" json:"LastTalked,omitempty"`
	Active     bool   `protobuf:"varint,7,opt,name=Active,proto3" json:"Active,omitempty"`
	NoPrayer   bool   `protobuf:"varint,8,opt,name=NoPrayer,proto3" json:"NoPrayer,omitempty"`
	NoTalk     bool   `protobuf:"varint,9,opt,name=NoTalk,proto3" json:"NoTalk,omitempty"`
}

func (x *Member) Reset() {
	*x = Member{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Member) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Member) ProtoMessage() {}

func (x *Member) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Member.ProtoReflect.Descriptor instead.
func (*Member) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{54}
}

func (x *Member) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Member) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Member) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Member) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Member) GetLastPrayed() string {
	if x != nil {
		return x.LastPrayed
	}
	return ""
}

func (x *Member) GetLastTalked() string {
	if x != nil {
		return x.LastTalked
	}
	return ""
}

func (x *Member) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Member) GetNoPrayer() bool {
	if x != nil {
		return x.NoPrayer
	}
	return false
}

func (x *Member) GetNoTalk() bool {
	if x != nil {
		return x.NoTalk
	}
	return false
}

type MemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member *Member `protobuf:"bytes,1,opt,name=Member,proto3" json:"Member,omitempty"`
	Result *Result `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *MemberResponse) Reset() {
	*x = MemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberResponse) ProtoMessage() {}

func (x *MemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberResponse.ProtoReflect.Descriptor instead.
func (*MemberResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{55}
}

func (x *MemberResponse) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *MemberResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type MemberRepeatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Member []*Member `protobuf:"bytes,1,rep,name=Member,proto3" json:"Member,omitempty"`
	Result *Result   `protobuf:"bytes,2,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *MemberRepeatResponse) Reset() {
	*x = MemberRepeatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberRepeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberRepeatResponse) ProtoMessage() {}

func (x *MemberRepeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberRepeatResponse.ProtoReflect.Descriptor instead.
func (*MemberRepeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{56}
}

func (x *MemberRepeatResponse) GetMember() []*Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *MemberRepeatResponse) GetResult() *Result {
	if x != nil {
		return x.Result
	}
	return nil
}

type MemberIDIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
}

func (x *MemberIDIn) Reset() {
	*x = MemberIDIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_proto_agenda_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberIDIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberIDIn) ProtoMessage() {}

func (x *MemberIDIn) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_agenda_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberIDIn.ProtoReflect.Descriptor instead.
func (*MemberIDIn) Descriptor() ([]byte, []int) {
	return file_pkg_proto_agenda_proto_rawDescGZIP(), []int{57}
}

func (x *MemberIDIn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

var File_pkg_proto_agenda_proto protoreflect.FileDescriptor

var file_pkg_proto_agenda_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x64, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x16, 0x0a, 0x04, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xc6, 0x05, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x65, 0x73, 0x69, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x43, 0x6f, 0x6e, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a,
	0x0a, 0x08, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68,
	0x6f, 0x72, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x68, 0x6f, 0x72, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x73,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65,
	0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x48, 0x79, 0x6d, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65,
	0x48, 0x79, 0x6d, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6c,
	0x6f, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x79, 0x6d, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x48, 0x79, 0x6d, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b,
	0x42, 0x65, 0x6e, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x42, 0x65, 0x6e, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x42, 0x69, 0x73, 0x68,
	0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x61, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x6b, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x61, 0x73, 0x74, 0x73, 0x75, 0x6e, 0x64,
	0x61, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x46, 0x61, 0x73, 0x74, 0x73, 0x75,
	0x6e, 0x64, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x41,
	0x67, 0x65, 0x6e, 0x64, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x22, 0x5e, 0x0a, 0x0e, 0x41, 0x67,
	0x65, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06,
	0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x52, 0x06, 0x41, 0x67, 0x65,
	0x6e, 0x64, 0x61, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x64, 0x0a, 0x14, 0x41, 0x67,
	0x65, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64,
	0x61, 0x52, 0x06, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x20, 0x0a, 0x0a, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x22, 0x41, 0x0a, 0x07, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x0f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x07, 0x56, 0x69, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x15, 0x56, 0x69, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x07, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x1d, 0x0a, 0x0b, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49, 0x44,
	0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x49, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x57, 0x61, 0x72, 0x64,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x6c, 0x52, 0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88, 0x01, 0x0a,
	0x1d, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40,
	0x0a, 0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x52,
	0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c,
	0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x57, 0x61, 0x72, 0x64, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x63,
	0x0a, 0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75,
	0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x61, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x61, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73,
	0x52, 0x0f, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75,
	0x73, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x1d, 0x57, 0x61, 0x72,
	0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0f, 0x57, 0x61,
	0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x52, 0x0f, 0x57, 0x61, 0x72,
	0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x0e, 0x42, 0x69,
	0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7e, 0x0a, 0x16, 0x42, 0x69,
	0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x0e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x1c, 0x42,
	0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x42,
	0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68,
	0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x0e, 0x42, 0x69, 0x73, 0x68,
	0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x24, 0x0a, 0x12, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x61, 0x6d, 0x69,
	0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x6a,
	0x0a, 0x11, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x70, 0x0a, 0x17, 0x4e, 0x65,
	0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1f, 0x0a, 0x0d,
	0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x73, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x6c, 0x65, 0x73, 0x73, 0x69, 0x6e,
	0x67, 0x73, 0x22, 0x6a, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x4f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x70,
	0x0a, 0x17, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x4f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09,
	0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x1f, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x49,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49,
	0x64, 0x22, 0x5d, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x62, 0x0a, 0x0f, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65,
	0x61, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x68, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x07, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x07,
	0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1d,
	0x0a, 0x0b, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x64, 0x0a,
	0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50,
	0x75, 0x6c, 0x70, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x50, 0x75, 0x6c,
	0x70, 0x69, 0x74, 0x22, 0x76, 0x0a, 0x14, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7c, 0x0a, 0x1a, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x2a, 0x0a,
	0x04, 0x48, 0x79, 0x6d, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x0c, 0x48, 0x79, 0x6d,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x48, 0x79, 0x6d,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x48, 0x79, 0x6d, 0x6e, 0x52, 0x04, 0x48, 0x79, 0x6d, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x5c, 0x0a, 0x12, 0x48, 0x79, 0x6d, 0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x48, 0x79, 0x6d, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79,
	0x6d, 0x6e, 0x52, 0x04, 0x48, 0x79, 0x6d, 0x6e, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x1a, 0x0a, 0x08, 0x48, 0x79, 0x6d, 0x6e, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x90, 0x01, 0x0a, 0x0e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x68,
	0x6f, 0x72, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43,
	0x68, 0x6f, 0x72, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x77, 0x73,
	0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4e, 0x65,
	0x77, 0x73, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x7e,
	0x0a, 0x16, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84,
	0x01, 0x0a, 0x1c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3d, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x0e,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x25,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x2a, 0x0a, 0x04, 0x52,
	0x6f, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x56, 0x0a, 0x0c, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x5c, 0x0a, 0x12, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1a, 0x0a,
	0x08, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x08, 0x52, 0x6f, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x77, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x50, 0x77, 0x64, 0x22, 0x66, 0x0a, 0x10, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6c, 0x0a, 0x16, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1e, 0x0a, 0x0c, 0x52, 0x6f, 0x6c,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x22, 0xf6, 0x01, 0x0a, 0x06, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x72,
	0x61, 0x79, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x61, 0x73, 0x74,
	0x50, 0x72, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x61, 0x73, 0x74, 0x54, 0x61,
	0x6c, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4c, 0x61, 0x73, 0x74,
	0x54, 0x61, 0x6c, 0x6b, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x4e, 0x6f, 0x50, 0x72, 0x61, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x4e, 0x6f, 0x50, 0x72, 0x61, 0x79, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f,
	0x54, 0x61, 0x6c, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4e, 0x6f, 0x54, 0x61,
	0x6c, 0x6b, 0x22, 0x5e, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x64, 0x0a, 0x14, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x1c, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x44, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x32, 0x95, 0x02, 0x0a, 0x0d, 0x41, 0x67, 0x65, 0x6e, 0x64,
	0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x41,
	0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67,
	0x65, 0x6e, 0x64, 0x61, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x1a, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x50,
	0x6f, 0x73, 0x74, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x0b, 0x50, 0x61, 0x74, 0x63, 0x68, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x1a, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x64, 0x61, 0x49, 0x44, 0x49, 0x6e, 0x1a,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xa3,
	0x02, 0x0a, 0x0e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x49,
	0x44, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x1c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x50, 0x6f,
	0x73, 0x74, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x32, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x74, 0x6f,
	0x72, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x32, 0x93, 0x03, 0x0a, 0x16, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x49, 0x44, 0x49,
	0x6e, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x57, 0x61, 0x72, 0x64, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x6c, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74,
	0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x14, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x12,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x6c, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x93, 0x03, 0x0a, 0x16, 0x57,
	0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x61, 0x72, 0x64,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x53, 0x75, 0x73, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73,
	0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x13, 0x50, 0x6f, 0x73, 0x74, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x1a, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x14, 0x50, 0x61, 0x74, 0x63, 0x68, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x1a, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x42, 0x0a, 0x15,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x61, 0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x53, 0x75, 0x73, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x61,
	0x72, 0x64, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x75, 0x73, 0x49, 0x44, 0x49,
	0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x32, 0x85, 0x03, 0x0a, 0x15, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a,
	0x12, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68,
	0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x13, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x69, 0x73, 0x68, 0x6f, 0x70, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xbf, 0x02, 0x0a, 0x10, 0x4e, 0x65, 0x77,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x44, 0x49, 0x6e, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a,
	0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x0e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x36, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x65, 0x77, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x65,
	0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xbf, 0x02, 0x0a, 0x10, 0x4f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x43, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x6e, 0x63, 0x65, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x72, 0x64, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x65, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x36, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xa3, 0x02, 0x0a,
	0x0e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x49, 0x44, 0x49,
	0x6e, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x50, 0x6f, 0x73, 0x74,
	0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x1a,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x32,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x12,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x70, 0x65, 0x61, 0x6b, 0x65, 0x72, 0x49,
	0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0xe9, 0x02, 0x0a, 0x13, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x41, 0x6e, 0x6e,
	0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x11, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x3c, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x49, 0x6e, 0x1a,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf9,
	0x01, 0x0a, 0x0b, 0x48, 0x79, 0x6d, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x48, 0x79, 0x6d, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x34, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x79, 0x6d, 0x6e, 0x12, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x79, 0x6d,
	0x6e, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x1a, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x63, 0x68, 0x48, 0x79, 0x6d, 0x6e,
	0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x1a, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x79, 0x6d, 0x6e, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x48, 0x79, 0x6d, 0x6e, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x85, 0x03, 0x0a, 0x15, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x49, 0x44, 0x49, 0x6e, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x50, 0x6f, 0x73, 0x74, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x13, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x40, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x61, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x49,
	0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0xf9, 0x01, 0x0a, 0x0b, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x1a, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x09, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c,
	0x65, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x2c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x44, 0x49, 0x6e, 0x1a,
	0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xb1,
	0x02, 0x0a, 0x0f, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x38, 0x0a, 0x0c, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x34, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0x96, 0x02, 0x0a, 0x0e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0b,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x44, 0x49, 0x6e, 0x1a, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pkg_proto_agenda_proto_rawDescOnce sync.Once
	file_pkg_proto_agenda_proto_rawDescData = file_pkg_proto_agenda_proto_rawDesc
)

func file_pkg_proto_agenda_proto_rawDescGZIP() []byte {
	file_pkg_proto_agenda_proto_rawDescOnce.Do(func() {
		file_pkg_proto_agenda_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_proto_agenda_proto_rawDescData)
	})
	return file_pkg_proto_agenda_proto_rawDescData
}

var file_pkg_proto_agenda_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_pkg_proto_agenda_proto_goTypes = []interface{}{
	(*IDIn)(nil),                          // 0: proto.IDIn
	(*Result)(nil),                        // 1: proto.Result
	(*Agenda)(nil),                        // 2: proto.Agenda
	(*AgendaResponse)(nil),                // 3: proto.AgendaResponse
	(*AgendaRepeatResponse)(nil),          // 4: proto.AgendaRepeatResponse
	(*AgendaIDIn)(nil),                    // 5: proto.AgendaIDIn
	(*Visitor)(nil),                       // 6: proto.Visitor
	(*VisitorResponse)(nil),               // 7: proto.VisitorResponse
	(*VisitorRepeatResponse)(nil),         // 8: proto.VisitorRepeatResponse
	(*VisitorIDIn)(nil),                   // 9: proto.VisitorIDIn
	(*WardBusinessRel)(nil),               // 10: proto.WardBusinessRel
	(*WardBusinessRelResponse)(nil),       // 11: proto.WardBusinessRelResponse
	(*WardBusinessRelRepeatResponse)(nil), // 12: proto.WardBusinessRelRepeatResponse
	(*WardBusinessRelIDIn)(nil),           // 13: proto.WardBusinessRelIDIn
	(*WardBusinessSus)(nil),               // 14: proto.WardBusinessSus
	(*WardBusinessSusResponse)(nil),       // 15: proto.WardBusinessSusResponse
	(*WardBusinessSusRepeatResponse)(nil), // 16: proto.WardBusinessSusRepeatResponse
	(*WardBusinessSusIDIn)(nil),           // 17: proto.WardBusinessSusIDIn
	(*BishopBusiness)(nil),                // 18: proto.BishopBusiness
	(*BishopBusinessResponse)(nil),        // 19: proto.BishopBusinessResponse
	(*BishopBusinessRepeatResponse)(nil),  // 20: proto.BishopBusinessRepeatResponse
	(*BishopBusinessIDIn)(nil),            // 21: proto.BishopBusinessIDIn
	(*NewMember)(nil),                     // 22: proto.NewMember
	(*NewMemberResponse)(nil),             // 23: proto.NewMemberResponse
	(*NewMemberRepeatResponse)(nil),       // 24: proto.NewMemberRepeatResponse
	(*NewMemberIDIn)(nil),                 // 25: proto.NewMemberIDIn
	(*Ordinance)(nil),                     // 26: proto.Ordinance
	(*OrdinanceResponse)(nil),             // 27: proto.OrdinanceResponse
	(*OrdinanceRepeatResponse)(nil),       // 28: proto.OrdinanceRepeatResponse
	(*OrdinanceIDIn)(nil),                 // 29: proto.OrdinanceIDIn
	(*Speaker)(nil),                       // 30: proto.Speaker
	(*SpeakerResponse)(nil),               // 31: proto.SpeakerResponse
	(*SpeakerRepeatResponse)(nil),         // 32: proto.SpeakerRepeatResponse
	(*SpeakerIDIn)(nil),                   // 33: proto.SpeakerIDIn
	(*Announcement)(nil),                  // 34: proto.Announcement
	(*AnnouncementResponse)(nil),          // 35: proto.AnnouncementResponse
	(*AnnouncementRepeatResponse)(nil),    // 36: proto.AnnouncementRepeatResponse
	(*AnnouncementIDIn)(nil),              // 37: proto.AnnouncementIDIn
	(*Hymn)(nil),                          // 38: proto.Hymn
	(*HymnResponse)(nil),                  // 39: proto.HymnResponse
	(*HymnRepeatResponse)(nil),            // 40: proto.HymnRepeatResponse
	(*HymnIDIn)(nil),                      // 41: proto.HymnIDIn
	(*DefaultCalling)(nil),                // 42: proto.DefaultCalling
	(*DefaultCallingResponse)(nil),        // 43: proto.DefaultCallingResponse
	(*DefaultCallingRepeatResponse)(nil),  // 44: proto.DefaultCallingRepeatResponse
	(*DefaultCallingIDIn)(nil),            // 45: proto.DefaultCallingIDIn
	(*Role)(nil),                          // 46: proto.Role
	(*RoleResponse)(nil),                  // 47: proto.RoleResponse
	(*RoleRepeatResponse)(nil),            // 48: proto.RoleRepeatResponse
	(*RoleIDIn)(nil),                      // 49: proto.RoleIDIn
	(*RoleUser)(nil),                      // 50: proto.RoleUser
	(*RoleUserResponse)(nil),              // 51: proto.RoleUserResponse
	(*RoleUserRepeatResponse)(nil),        // 52: proto.RoleUserRepeatResponse
	(*RoleUserIDIn)(nil),                  // 53: proto.RoleUserIDIn
	(*Member)(nil),                        // 54: proto.Member
	(*MemberResponse)(nil),                // 55: proto.MemberResponse
	(*MemberRepeatResponse)(nil),          // 56: proto.MemberRepeatResponse
	(*MemberIDIn)(nil),                    // 57: proto.MemberIDIn
}
var file_pkg_proto_agenda_proto_depIdxs = []int32{
	2,   // 0: proto.AgendaResponse.Agenda:type_name -> proto.Agenda
	1,   // 1: proto.AgendaResponse.result:type_name -> proto.Result
	2,   // 2: proto.AgendaRepeatResponse.Agenda:type_name -> proto.Agenda
	1,   // 3: proto.AgendaRepeatResponse.result:type_name -> proto.Result
	6,   // 4: proto.VisitorResponse.Visitor:type_name -> proto.Visitor
	1,   // 5: proto.VisitorResponse.result:type_name -> proto.Result
	6,   // 6: proto.VisitorRepeatResponse.Visitor:type_name -> proto.Visitor
	1,   // 7: proto.VisitorRepeatResponse.result:type_name -> proto.Result
	10,  // 8: proto.WardBusinessRelResponse.WardBusinessRel:type_name -> proto.WardBusinessRel
	1,   // 9: proto.WardBusinessRelResponse.result:type_name -> proto.Result
	10,  // 10: proto.WardBusinessRelRepeatResponse.WardBusinessRel:type_name -> proto.WardBusinessRel
	1,   // 11: proto.WardBusinessRelRepeatResponse.result:type_name -> proto.Result
	14,  // 12: proto.WardBusinessSusResponse.WardBusinessSus:type_name -> proto.WardBusinessSus
	1,   // 13: proto.WardBusinessSusResponse.result:type_name -> proto.Result
	14,  // 14: proto.WardBusinessSusRepeatResponse.WardBusinessSus:type_name -> proto.WardBusinessSus
	1,   // 15: proto.WardBusinessSusRepeatResponse.result:type_name -> proto.Result
	18,  // 16: proto.BishopBusinessResponse.BishopBusiness:type_name -> proto.BishopBusiness
	1,   // 17: proto.BishopBusinessResponse.result:type_name -> proto.Result
	18,  // 18: proto.BishopBusinessRepeatResponse.BishopBusiness:type_name -> proto.BishopBusiness
	1,   // 19: proto.BishopBusinessRepeatResponse.result:type_name -> proto.Result
	22,  // 20: proto.NewMemberResponse.NewMember:type_name -> proto.NewMember
	1,   // 21: proto.NewMemberResponse.result:type_name -> proto.Result
	22,  // 22: proto.NewMemberRepeatResponse.NewMember:type_name -> proto.NewMember
	1,   // 23: proto.NewMemberRepeatResponse.result:type_name -> proto.Result
	26,  // 24: proto.OrdinanceResponse.Ordinance:type_name -> proto.Ordinance
	1,   // 25: proto.OrdinanceResponse.result:type_name -> proto.Result
	26,  // 26: proto.OrdinanceRepeatResponse.Ordinance:type_name -> proto.Ordinance
	1,   // 27: proto.OrdinanceRepeatResponse.result:type_name -> proto.Result
	30,  // 28: proto.SpeakerResponse.Speaker:type_name -> proto.Speaker
	1,   // 29: proto.SpeakerResponse.result:type_name -> proto.Result
	30,  // 30: proto.SpeakerRepeatResponse.Speaker:type_name -> proto.Speaker
	1,   // 31: proto.SpeakerRepeatResponse.result:type_name -> proto.Result
	34,  // 32: proto.AnnouncementResponse.Announcement:type_name -> proto.Announcement
	1,   // 33: proto.AnnouncementResponse.result:type_name -> proto.Result
	34,  // 34: proto.AnnouncementRepeatResponse.Announcement:type_name -> proto.Announcement
	1,   // 35: proto.AnnouncementRepeatResponse.result:type_name -> proto.Result
	38,  // 36: proto.HymnResponse.Hymn:type_name -> proto.Hymn
	1,   // 37: proto.HymnResponse.result:type_name -> proto.Result
	38,  // 38: proto.HymnRepeatResponse.Hymn:type_name -> proto.Hymn
	1,   // 39: proto.HymnRepeatResponse.result:type_name -> proto.Result
	42,  // 40: proto.DefaultCallingResponse.DefaultCalling:type_name -> proto.DefaultCalling
	1,   // 41: proto.DefaultCallingResponse.result:type_name -> proto.Result
	42,  // 42: proto.DefaultCallingRepeatResponse.DefaultCalling:type_name -> proto.DefaultCalling
	1,   // 43: proto.DefaultCallingRepeatResponse.result:type_name -> proto.Result
	46,  // 44: proto.RoleResponse.Role:type_name -> proto.Role
	1,   // 45: proto.RoleResponse.result:type_name -> proto.Result
	46,  // 46: proto.RoleRepeatResponse.Role:type_name -> proto.Role
	1,   // 47: proto.RoleRepeatResponse.result:type_name -> proto.Result
	50,  // 48: proto.RoleUserResponse.RoleUser:type_name -> proto.RoleUser
	1,   // 49: proto.RoleUserResponse.result:type_name -> proto.Result
	50,  // 50: proto.RoleUserRepeatResponse.RoleUser:type_name -> proto.RoleUser
	1,   // 51: proto.RoleUserRepeatResponse.result:type_name -> proto.Result
	54,  // 52: proto.MemberResponse.Member:type_name -> proto.Member
	1,   // 53: proto.MemberResponse.result:type_name -> proto.Result
	54,  // 54: proto.MemberRepeatResponse.Member:type_name -> proto.Member
	1,   // 55: proto.MemberRepeatResponse.result:type_name -> proto.Result
	5,   // 56: proto.AgendaService.GetAgenda:input_type -> proto.AgendaIDIn
	2,   // 57: proto.AgendaService.SearchAgenda:input_type -> proto.Agenda
	2,   // 58: proto.AgendaService.PostAgenda:input_type -> proto.Agenda
	2,   // 59: proto.AgendaService.PatchAgenda:input_type -> proto.Agenda
	5,   // 60: proto.AgendaService.DeleteAgenda:input_type -> proto.AgendaIDIn
	9,   // 61: proto.VisitorService.GetVisitor:input_type -> proto.VisitorIDIn
	6,   // 62: proto.VisitorService.SearchVisitor:input_type -> proto.Visitor
	6,   // 63: proto.VisitorService.PostVisitor:input_type -> proto.Visitor
	6,   // 64: proto.VisitorService.PatchVisitor:input_type -> proto.Visitor
	9,   // 65: proto.VisitorService.DeleteVisitor:input_type -> proto.VisitorIDIn
	13,  // 66: proto.WardBusinessRelService.GetWardBusinessRel:input_type -> proto.WardBusinessRelIDIn
	10,  // 67: proto.WardBusinessRelService.SearchWardBusinessRel:input_type -> proto.WardBusinessRel
	10,  // 68: proto.WardBusinessRelService.PostWardBusinessRel:input_type -> proto.WardBusinessRel
	10,  // 69: proto.WardBusinessRelService.PatchWardBusinessRel:input_type -> proto.WardBusinessRel
	13,  // 70: proto.WardBusinessRelService.DeleteWardBusinessRel:input_type -> proto.WardBusinessRelIDIn
	17,  // 71: proto.WardBusinessSusService.GetWardBusinessSus:input_type -> proto.WardBusinessSusIDIn
	14,  // 72: proto.WardBusinessSusService.SearchWardBusinessSus:input_type -> proto.WardBusinessSus
	14,  // 73: proto.WardBusinessSusService.PostWardBusinessSus:input_type -> proto.WardBusinessSus
	14,  // 74: proto.WardBusinessSusService.PatchWardBusinessSus:input_type -> proto.WardBusinessSus
	17,  // 75: proto.WardBusinessSusService.DeleteWardBusinessSus:input_type -> proto.WardBusinessSusIDIn
	21,  // 76: proto.BishopBusinessService.GetBishopBusiness:input_type -> proto.BishopBusinessIDIn
	18,  // 77: proto.BishopBusinessService.SearchBishopBusiness:input_type -> proto.BishopBusiness
	18,  // 78: proto.BishopBusinessService.PostBishopBusiness:input_type -> proto.BishopBusiness
	18,  // 79: proto.BishopBusinessService.PatchBishopBusiness:input_type -> proto.BishopBusiness
	21,  // 80: proto.BishopBusinessService.DeleteBishopBusiness:input_type -> proto.BishopBusinessIDIn
	25,  // 81: proto.NewMemberService.GetNewMember:input_type -> proto.NewMemberIDIn
	22,  // 82: proto.NewMemberService.SearchNewMember:input_type -> proto.NewMember
	22,  // 83: proto.NewMemberService.PostNewMember:input_type -> proto.NewMember
	22,  // 84: proto.NewMemberService.PatchNewMember:input_type -> proto.NewMember
	25,  // 85: proto.NewMemberService.DeleteNewMember:input_type -> proto.NewMemberIDIn
	29,  // 86: proto.OrdinanceService.GetOrdinance:input_type -> proto.OrdinanceIDIn
	26,  // 87: proto.OrdinanceService.SearchOrdinance:input_type -> proto.Ordinance
	26,  // 88: proto.OrdinanceService.PostOrdinance:input_type -> proto.Ordinance
	26,  // 89: proto.OrdinanceService.PatchOrdinance:input_type -> proto.Ordinance
	29,  // 90: proto.OrdinanceService.DeleteOrdinance:input_type -> proto.OrdinanceIDIn
	33,  // 91: proto.SpeakerService.GetSpeaker:input_type -> proto.SpeakerIDIn
	30,  // 92: proto.SpeakerService.SearchSpeaker:input_type -> proto.Speaker
	30,  // 93: proto.SpeakerService.PostSpeaker:input_type -> proto.Speaker
	30,  // 94: proto.SpeakerService.PatchSpeaker:input_type -> proto.Speaker
	33,  // 95: proto.SpeakerService.DeleteSpeaker:input_type -> proto.SpeakerIDIn
	37,  // 96: proto.AnnouncementService.GetAnnouncement:input_type -> proto.AnnouncementIDIn
	34,  // 97: proto.AnnouncementService.SearchAnnouncement:input_type -> proto.Announcement
	34,  // 98: proto.AnnouncementService.PostAnnouncement:input_type -> proto.Announcement
	34,  // 99: proto.AnnouncementService.PatchAnnouncement:input_type -> proto.Announcement
	37,  // 100: proto.AnnouncementService.DeleteAnnouncement:input_type -> proto.AnnouncementIDIn
	41,  // 101: proto.HymnService.GetHymn:input_type -> proto.HymnIDIn
	38,  // 102: proto.HymnService.SearchHymn:input_type -> proto.Hymn
	38,  // 103: proto.HymnService.PostHymn:input_type -> proto.Hymn
	38,  // 104: proto.HymnService.PatchHymn:input_type -> proto.Hymn
	41,  // 105: proto.HymnService.DeleteHymn:input_type -> proto.HymnIDIn
	45,  // 106: proto.DefaultCallingService.GetDefaultCalling:input_type -> proto.DefaultCallingIDIn
	42,  // 107: proto.DefaultCallingService.SearchDefaultCalling:input_type -> proto.DefaultCalling
	42,  // 108: proto.DefaultCallingService.PostDefaultCalling:input_type -> proto.DefaultCalling
	42,  // 109: proto.DefaultCallingService.PatchDefaultCalling:input_type -> proto.DefaultCalling
	45,  // 110: proto.DefaultCallingService.DeleteDefaultCalling:input_type -> proto.DefaultCallingIDIn
	49,  // 111: proto.RoleService.GetRole:input_type -> proto.RoleIDIn
	46,  // 112: proto.RoleService.SearchRole:input_type -> proto.Role
	46,  // 113: proto.RoleService.PostRole:input_type -> proto.Role
	46,  // 114: proto.RoleService.PatchRole:input_type -> proto.Role
	49,  // 115: proto.RoleService.DeleteRole:input_type -> proto.RoleIDIn
	53,  // 116: proto.RoleUserService.GetRoleUser:input_type -> proto.RoleUserIDIn
	50,  // 117: proto.RoleUserService.SearchRoleUser:input_type -> proto.RoleUser
	50,  // 118: proto.RoleUserService.PostRoleUser:input_type -> proto.RoleUser
	50,  // 119: proto.RoleUserService.PatchRoleUser:input_type -> proto.RoleUser
	53,  // 120: proto.RoleUserService.DeleteRoleUser:input_type -> proto.RoleUserIDIn
	57,  // 121: proto.MembersService.GetMember:input_type -> proto.MemberIDIn
	54,  // 122: proto.MembersService.SearchMember:input_type -> proto.Member
	54,  // 123: proto.MembersService.PostMember:input_type -> proto.Member
	54,  // 124: proto.MembersService.PatchMember:input_type -> proto.Member
	57,  // 125: proto.MembersService.DeleteMember:input_type -> proto.MemberIDIn
	3,   // 126: proto.AgendaService.GetAgenda:output_type -> proto.AgendaResponse
	4,   // 127: proto.AgendaService.SearchAgenda:output_type -> proto.AgendaRepeatResponse
	3,   // 128: proto.AgendaService.PostAgenda:output_type -> proto.AgendaResponse
	1,   // 129: proto.AgendaService.PatchAgenda:output_type -> proto.Result
	1,   // 130: proto.AgendaService.DeleteAgenda:output_type -> proto.Result
	7,   // 131: proto.VisitorService.GetVisitor:output_type -> proto.VisitorResponse
	8,   // 132: proto.VisitorService.SearchVisitor:output_type -> proto.VisitorRepeatResponse
	7,   // 133: proto.VisitorService.PostVisitor:output_type -> proto.VisitorResponse
	1,   // 134: proto.VisitorService.PatchVisitor:output_type -> proto.Result
	1,   // 135: proto.VisitorService.DeleteVisitor:output_type -> proto.Result
	11,  // 136: proto.WardBusinessRelService.GetWardBusinessRel:output_type -> proto.WardBusinessRelResponse
	12,  // 137: proto.WardBusinessRelService.SearchWardBusinessRel:output_type -> proto.WardBusinessRelRepeatResponse
	11,  // 138: proto.WardBusinessRelService.PostWardBusinessRel:output_type -> proto.WardBusinessRelResponse
	1,   // 139: proto.WardBusinessRelService.PatchWardBusinessRel:output_type -> proto.Result
	1,   // 140: proto.WardBusinessRelService.DeleteWardBusinessRel:output_type -> proto.Result
	15,  // 141: proto.WardBusinessSusService.GetWardBusinessSus:output_type -> proto.WardBusinessSusResponse
	16,  // 142: proto.WardBusinessSusService.SearchWardBusinessSus:output_type -> proto.WardBusinessSusRepeatResponse
	15,  // 143: proto.WardBusinessSusService.PostWardBusinessSus:output_type -> proto.WardBusinessSusResponse
	1,   // 144: proto.WardBusinessSusService.PatchWardBusinessSus:output_type -> proto.Result
	1,   // 145: proto.WardBusinessSusService.DeleteWardBusinessSus:output_type -> proto.Result
	19,  // 146: proto.BishopBusinessService.GetBishopBusiness:output_type -> proto.BishopBusinessResponse
	20,  // 147: proto.BishopBusinessService.SearchBishopBusiness:output_type -> proto.BishopBusinessRepeatResponse
	19,  // 148: proto.BishopBusinessService.PostBishopBusiness:output_type -> proto.BishopBusinessResponse
	1,   // 149: proto.BishopBusinessService.PatchBishopBusiness:output_type -> proto.Result
	1,   // 150: proto.BishopBusinessService.DeleteBishopBusiness:output_type -> proto.Result
	23,  // 151: proto.NewMemberService.GetNewMember:output_type -> proto.NewMemberResponse
	24,  // 152: proto.NewMemberService.SearchNewMember:output_type -> proto.NewMemberRepeatResponse
	23,  // 153: proto.NewMemberService.PostNewMember:output_type -> proto.NewMemberResponse
	1,   // 154: proto.NewMemberService.PatchNewMember:output_type -> proto.Result
	1,   // 155: proto.NewMemberService.DeleteNewMember:output_type -> proto.Result
	27,  // 156: proto.OrdinanceService.GetOrdinance:output_type -> proto.OrdinanceResponse
	28,  // 157: proto.OrdinanceService.SearchOrdinance:output_type -> proto.OrdinanceRepeatResponse
	27,  // 158: proto.OrdinanceService.PostOrdinance:output_type -> proto.OrdinanceResponse
	1,   // 159: proto.OrdinanceService.PatchOrdinance:output_type -> proto.Result
	1,   // 160: proto.OrdinanceService.DeleteOrdinance:output_type -> proto.Result
	31,  // 161: proto.SpeakerService.GetSpeaker:output_type -> proto.SpeakerResponse
	32,  // 162: proto.SpeakerService.SearchSpeaker:output_type -> proto.SpeakerRepeatResponse
	31,  // 163: proto.SpeakerService.PostSpeaker:output_type -> proto.SpeakerResponse
	1,   // 164: proto.SpeakerService.PatchSpeaker:output_type -> proto.Result
	1,   // 165: proto.SpeakerService.DeleteSpeaker:output_type -> proto.Result
	35,  // 166: proto.AnnouncementService.GetAnnouncement:output_type -> proto.AnnouncementResponse
	36,  // 167: proto.AnnouncementService.SearchAnnouncement:output_type -> proto.AnnouncementRepeatResponse
	35,  // 168: proto.AnnouncementService.PostAnnouncement:output_type -> proto.AnnouncementResponse
	1,   // 169: proto.AnnouncementService.PatchAnnouncement:output_type -> proto.Result
	1,   // 170: proto.AnnouncementService.DeleteAnnouncement:output_type -> proto.Result
	39,  // 171: proto.HymnService.GetHymn:output_type -> proto.HymnResponse
	40,  // 172: proto.HymnService.SearchHymn:output_type -> proto.HymnRepeatResponse
	39,  // 173: proto.HymnService.PostHymn:output_type -> proto.HymnResponse
	1,   // 174: proto.HymnService.PatchHymn:output_type -> proto.Result
	1,   // 175: proto.HymnService.DeleteHymn:output_type -> proto.Result
	43,  // 176: proto.DefaultCallingService.GetDefaultCalling:output_type -> proto.DefaultCallingResponse
	44,  // 177: proto.DefaultCallingService.SearchDefaultCalling:output_type -> proto.DefaultCallingRepeatResponse
	43,  // 178: proto.DefaultCallingService.PostDefaultCalling:output_type -> proto.DefaultCallingResponse
	1,   // 179: proto.DefaultCallingService.PatchDefaultCalling:output_type -> proto.Result
	1,   // 180: proto.DefaultCallingService.DeleteDefaultCalling:output_type -> proto.Result
	47,  // 181: proto.RoleService.GetRole:output_type -> proto.RoleResponse
	48,  // 182: proto.RoleService.SearchRole:output_type -> proto.RoleRepeatResponse
	47,  // 183: proto.RoleService.PostRole:output_type -> proto.RoleResponse
	1,   // 184: proto.RoleService.PatchRole:output_type -> proto.Result
	1,   // 185: proto.RoleService.DeleteRole:output_type -> proto.Result
	51,  // 186: proto.RoleUserService.GetRoleUser:output_type -> proto.RoleUserResponse
	52,  // 187: proto.RoleUserService.SearchRoleUser:output_type -> proto.RoleUserRepeatResponse
	51,  // 188: proto.RoleUserService.PostRoleUser:output_type -> proto.RoleUserResponse
	1,   // 189: proto.RoleUserService.PatchRoleUser:output_type -> proto.Result
	1,   // 190: proto.RoleUserService.DeleteRoleUser:output_type -> proto.Result
	55,  // 191: proto.MembersService.GetMember:output_type -> proto.MemberResponse
	56,  // 192: proto.MembersService.SearchMember:output_type -> proto.MemberRepeatResponse
	55,  // 193: proto.MembersService.PostMember:output_type -> proto.MemberResponse
	1,   // 194: proto.MembersService.PatchMember:output_type -> proto.Result
	1,   // 195: proto.MembersService.DeleteMember:output_type -> proto.Result
	126, // [126:196] is the sub-list for method output_type
	56,  // [56:126] is the sub-list for method input_type
	56,  // [56:56] is the sub-list for extension type_name
	56,  // [56:56] is the sub-list for extension extendee
	0,   // [0:56] is the sub-list for field type_name
}

func init() { file_pkg_proto_agenda_proto_init() }
func file_pkg_proto_agenda_proto_init() {
	if File_pkg_proto_agenda_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_proto_agenda_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agenda); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgendaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgendaRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgendaIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Visitor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisitorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisitorRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VisitorIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessRel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessRelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessRelRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessRelIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessSus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessSusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessSusRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WardBusinessSusIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BishopBusiness); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BishopBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BishopBusinessRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BishopBusinessIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMemberRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMemberIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ordinance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdinanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdinanceRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrdinanceIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Speaker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeakerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeakerRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpeakerIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Announcement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnouncementIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hymn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HymnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HymnRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HymnIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultCalling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultCallingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultCallingRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultCallingIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUserRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleUserIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Member); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberRepeatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_proto_agenda_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberIDIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_proto_agenda_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   14,
		},
		GoTypes:           file_pkg_proto_agenda_proto_goTypes,
		DependencyIndexes: file_pkg_proto_agenda_proto_depIdxs,
		MessageInfos:      file_pkg_proto_agenda_proto_msgTypes,
	}.Build()
	File_pkg_proto_agenda_proto = out.File
	file_pkg_proto_agenda_proto_rawDesc = nil
	file_pkg_proto_agenda_proto_goTypes = nil
	file_pkg_proto_agenda_proto_depIdxs = nil
}
